parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)$ /'
}

PS1+="\[\033[33m\]\$(parse_git_branch)\[\033[00m\]"
export PS1

eval "$(direnv hook bash)"

my-bash-help() {
    echo "Functions:"
    echo "hydra-rev() args: NIX_PACKAGE_NAME"
    echo "hydra-job-revision() args: HYDRA_JOB_URL"
    echo "fzf-manix() args: MANIX_QUERY"
    echo "fzf-store()"
    echo "nix-which() args: PROGRAM_NAME"
    echo "Aliases:"
    echo "nli -> nix-linter"
    echo "nf -> nixpkgs-fmt"
    echo "ns -> nix-shell"
    echo "gs -> git status"
    echo "ga -> git add"
    echo "gc -> git commit"
    echo "gpo -> git push origin"
}

hydra-rev() {
    hydra-job-revision $(hydra-check $1 --url | cut -d/ -f 5-)
}

hydra-job-revision() {
    local jobseteval job=$1
    shift 1
    case "$job" in
        *'/'*) ;;
        *) job="nixpkgs/trunk/$job" ;;
    esac
    case "$job" in
        'http://'*|'https://'*) ;;
        *) job="https://hydra.nixos.org/job/$job" ;;
    esac
    jobseteval=$(curl -fsSL -H 'Content-Type: application/json' "$job/latest" | jq '.jobsetevals[0]')
    curl -fsSL -H 'Accept: application/json' "${job%/job*}/eval/$jobseteval" | jq -r '.jobsetevalinputs.nixpkgs.revision'
}

fzf-manix () { 
    manix $1 | grep '^# ' | sed 's/^# \(.*\) (.*/\1/;s/ (.*//;s/^# //' | fzf --preview="manix '{}'" | xargs manix;
}

fzf-store() {
    find /nix/store -mindepth 1 -maxdepth 1 -type d | fzf -m --preview-window right:50% --preview 'nix-store -q --tree {}'
}

nix-which() {
    readlink -f $(which $1)
}

alias nli="nix-linter"
alias nf="nixpkgs-fmt"
alias ns="nix-shell"
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gpo="git push origin"
